import json
import Connectors
import Transformations
import AutoML
try:
    Softwarestock_DBFS = Connectors.DBFSConnector.fetch(
        [], {}, "5e9d877fe3127dd4c3d89348", spark, "{'url': '/Demo/Predict_Microsoft_Stock.csv', 'file_type': 'Delimeted', 'dbfs_token': 'dapib8073bbfa952efa9d363b234ce06e2c6', 'dbfs_domain': 'westus.azuredatabricks.net', 'delimiter': ',', 'is_header': 'Use Header Line'}")

except Exception as ex:
    print(ex)
try:
    Softwarestock_AutoFE = Transformations.TransformationMain.run(["5e9d877fe3127dd4c3d89348"], {"5e9d877fe3127dd4c3d89348": Softwarestock_DBFS}, "5e9d877fe3127dd4c3d89349", spark, json.dumps({"FE": [{"transformationsData": {}, "feature": "quarter", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "271", "mean": "1.56", "stddev": "0.5", "min": "1", "max": "2", "missing": "0"}}, {"transformationsData": {"feature_label": "stock"}, "feature": "stock", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "271", "mean": "", "stddev": "", "min": "AA", "max": "XOM", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {"feature_label": "date"}, "feature": "date", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "271", "mean": "", "stddev": "", "min": "1/14/2011", "max": "6/3/2011", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {"feature_label": "high"}, "feature": "high", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "271", "mean": "", "stddev": "", "min": "$101.61 ", "max": "$99.72 ", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {"feature_label": "low"}, "feature": "low", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "271", "mean": "", "stddev": "", "min": "$10.40 ", "max": "$99.57 ", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {"feature_label": "close"}, "feature": "close", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "271", "mean": "", "stddev": "", "min": "$10.68 ", "max": "$99.93 ", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {}, "feature": "volume", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "271", "mean": "107978121.39", "stddev": "131905556.27", "min": "10135730", "max": "889460755", "missing": "0"}}, {"transformationsData": {}, "feature": "percent_change_price", "type": "real", "selected": "True", "replaceby": "mean", "stats": {"count": "271", "mean": "0.36", "stddev": "2.44", "min": "-8.52713", "max": "6.67656", "missing": "0"}, "transformation": ""}, {"transformationsData": {}, "feature": "percent_change_volume_over_last_wk", "type": "real", "selected": "True", "replaceby": "mean", "stats": {"count": "271", "mean": "3.28", "stddev": "32.49", "min": "-60.98831052", "max": "122.9442017", "missing": "0"}, "transformation": ""}, {"transformationsData": {}, "feature": "previous_weeks_volume", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "271", "mean": "115913757.3", "stddev": "157531918.37", "min": "11795580", "max": "1054415375", "missing": "0"}}, {"transformationsData": {"feature_label": "next_weeks_open"}, "feature": "next_weeks_open", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "271", "mean": "", "stddev": "", "min": "$10.59 ", "max": "$99.96 ", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {
                                                                  "feature_label": "next_weeks_close"}, "feature": "next_weeks_close", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "271", "mean": "", "stddev": "", "min": "$10.52 ", "max": "$99.67 ", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {}, "feature": "percent_change_next_weeks_price", "type": "real", "selected": "True", "replaceby": "mean", "stats": {"count": "271", "mean": "0.21", "stddev": "2.85", "min": "-15.4229", "max": "8.66347", "missing": "0"}, "transformation": ""}, {"transformationsData": {}, "feature": "days_to_next_dividend", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "271", "mean": "57.72", "stddev": "54.62", "min": "0", "max": "322", "missing": "0"}}, {"transformationsData": {}, "feature": "percent_return_next_dividend", "type": "real", "selected": "True", "replaceby": "mean", "stats": {"count": "271", "mean": "0.7", "stddev": "0.29", "min": "0.0677966", "max": "1.52862", "missing": "0"}, "transformation": ""}, {"transformationsData": {"feature_label": "open"}, "feature": "open", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "271", "mean": "", "stddev": "", "min": "$10.89 ", "max": "$99.62 ", "missing": "0"}, "transformation": "String Indexer"}, {"feature": "stock_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "271", "mean": "12.57", "stddev": "8.59", "min": "0.0", "max": "29.0", "missing": "0"}}, {"feature": "date_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "271", "mean": "10.0", "stddev": "6.86", "min": "0.0", "max": "23.0", "missing": "0"}}, {"feature": "high_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "271", "mean": "129.13", "stddev": "78.15", "min": "0.0", "max": "264.0", "missing": "0"}}, {"feature": "low_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "271", "mean": "127.24", "stddev": "77.99", "min": "0.0", "max": "262.0", "missing": "0"}}, {"feature": "close_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "271", "mean": "127.19", "stddev": "78.06", "min": "0.0", "max": "262.0", "missing": "0"}}, {"feature": "next_weeks_open_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "271", "mean": "129.13", "stddev": "78.15", "min": "0.0", "max": "264.0", "missing": "0"}}, {"feature": "next_weeks_close_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "271", "mean": "127.19", "stddev": "78.06", "min": "0.0", "max": "262.0", "missing": "0"}}, {"feature": "open_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "271", "mean": "132.03", "stddev": "78.32", "min": "0.0", "max": "267.0", "missing": "0"}}]}))

except Exception as ex:
    print(ex)
try:
    AutoML.functionRegression(Softwarestock_AutoFE, ["quarter", "stock", "date", "high", "low", "close", "volume", "percent_change_price", "percent_change_volume_over_last_wk",
                                                     "previous_weeks_volume", "next_weeks_open", "next_weeks_close", "percent_change_next_weeks_price", "days_to_next_dividend", "percent_return_next_dividend"], "open")

except Exception as ex:
    print(ex)
